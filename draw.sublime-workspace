{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"zom",
				"zommer_win"
			],
			[
				"colr",
				"colour"
			],
			[
				"key",
				"keyType"
			],
			[
				"keyc",
				"keyCode"
			],
			[
				"ke",
				"keyCode"
			],
			[
				"coo",
				"coord_key"
			],
			[
				"ba",
				"bar_h"
			],
			[
				"pon",
				"pongSettings"
			],
			[
				"po",
				"pongWrap"
			],
			[
				"Bloc",
				"BlocklyApps"
			],
			[
				"block",
				"blockPos"
			],
			[
				"blo",
				"blockPos"
			],
			[
				"ond",
				"onDragStart"
			],
			[
				"modu",
				"moduleBB"
			],
			[
				"inte",
				"intersects"
			],
			[
				"ge",
				"geometry"
			],
			[
				"re",
				"relativeBBox"
			],
			[
				"ho",
				"hoveredBBox"
			],
			[
				"fun",
				"function"
			],
			[
				"get",
				"getBoundingBox"
			],
			[
				"prot",
				"prototype"
			],
			[
				"abs",
				"absolutePos"
			],
			[
				"han",
				"Handlebars"
			],
			[
				"hand",
				"Handlebars"
			],
			[
				"tile",
				"tile_v"
			],
			[
				"down",
				"downsize"
			],
			[
				"sta",
				"static_dir"
			],
			[
				"wa",
				"watcher"
			],
			[
				"styl",
				"stylus"
			],
			[
				"des",
				"dest"
			],
			[
				"de",
				"destDir"
			],
			[
				"ra",
				"range_x"
			],
			[
				"dra",
				"drawTile"
			],
			[
				"wid",
				"width"
			],
			[
				"pad",
				"padding_x"
			],
			[
				"cho",
				"chosen_size"
			],
			[
				"stage",
				"stage_density"
			],
			[
				"appl",
				"apples_count"
			],
			[
				"st",
				"stage_density"
			],
			[
				"init",
				"init_screen"
			],
			[
				"get_col",
				"get_colors_map"
			],
			[
				"colors",
				"colors_map"
			],
			[
				"dire",
				"directionalDelay"
			],
			[
				"turbo-d",
				"turbo-directional-left"
			],
			[
				"turbo-directional-",
				"turbo-directional-h"
			],
			[
				"CLOS",
				"CLOSURE_FILES"
			],
			[
				"SOY",
				"SOY_TEMPLATES"
			],
			[
				"chan",
				"changed_file"
			],
			[
				"a",
				"abs_template"
			],
			[
				"ver",
				"verbosity"
			],
			[
				"closu",
				"closure_builder"
			],
			[
				"iso",
				"iOS7"
			],
			[
				"baloo",
				"baloon-orange"
			],
			[
				"res",
				"restart"
			],
			[
				"inti",
				"initialBgPos"
			],
			[
				"backgroun",
				"background-position"
			],
			[
				"activa",
				"activator"
			],
			[
				"burn",
				"burnable"
			],
			[
				"bur",
				"burnable"
			],
			[
				"sprit",
				"spriteEl"
			],
			[
				"body",
				"Body"
			],
			[
				"target",
				"targets"
			],
			[
				"class",
				"classNames"
			],
			[
				"resi",
				"resizeCallback"
			],
			[
				"stars",
				"starsCount"
			],
			[
				"text",
				"text-align"
			],
			[
				"pla",
				"players"
			],
			[
				"scale",
				"scaleRatio"
			],
			[
				"worl",
				"worldToScreen"
			],
			[
				"line",
				"lineWidth"
			],
			[
				"drag",
				"dragged"
			],
			[
				"task",
				"taskNames"
			],
			[
				"ta",
				"tasksParts"
			],
			[
				"tas",
				"taskNames"
			],
			[
				"watchin",
				"watchingSources"
			],
			[
				"tar",
				"targets"
			],
			[
				"scal",
				"scaleY"
			],
			[
				"pre",
				"preset"
			],
			[
				"has",
				"hasAttr"
			],
			[
				"in",
				"interaction"
			],
			[
				"atr",
				"attributes"
			],
			[
				"op",
				"openNextLevel"
			],
			[
				"next",
				"nextLevel"
			],
			[
				"level",
				"levelName"
			],
			[
				"deco",
				"decoratorId"
			],
			[
				"bak",
				"background-size"
			],
			[
				"render",
				"renderDecorators"
			],
			[
				"hover",
				"hoveredTarget"
			],
			[
				"anim",
				"animatedStars"
			],
			[
				"remo",
				"removeCount"
			],
			[
				"modal",
				"modalTemplate"
			],
			[
				"m",
				"m_body"
			],
			[
				"wrap",
				"wrapStyle"
			],
			[
				"new",
				"newView"
			],
			[
				"scre",
				"screen"
			],
			[
				"use",
				"useFakeSize"
			],
			[
				"be",
				"behaviourType"
			],
			[
				"ini",
				"initBehaviours"
			],
			[
				"layer",
				"layerId"
			],
			[
				"La",
				"layerId"
			],
			[
				"update",
				"updatePos"
			],
			[
				"upda",
				"update"
			],
			[
				"colli",
				"colliding"
			],
			[
				"li",
				"touchListeners"
			],
			[
				"poi",
				"points"
			],
			[
				"poin",
				"pointsArr"
			],
			[
				"attr",
				"attrName"
			],
			[
				"kinem",
				"kinematicBody"
			],
			[
				"Mouse",
				"mouse"
			],
			[
				"force",
				"forceY"
			],
			[
				"flick",
				"flickTarget"
			],
			[
				"Mo",
				"MouseControl"
			],
			[
				"wra",
				"wrapOffset"
			],
			[
				"b2",
				"b2dBody"
			],
			[
				"min",
				"min-height"
			],
			[
				"Sprite",
				"SpriteRenderer"
			],
			[
				"items",
				"itemsType"
			],
			[
				"rat",
				"ratioY"
			],
			[
				"ratio",
				"ratioY"
			],
			[
				"rati",
				"ratioX"
			],
			[
				"fake",
				"fakeSize"
			],
			[
				"ga",
				"galaxy-s3"
			],
			[
				"test",
				"testSizes"
			],
			[
				"addto",
				"addToLayer"
			],
			[
				"en",
				"EntitiesPalette"
			],
			[
				"sampl",
				"sampleId"
			],
			[
				"Spri",
				"SpritesPalette"
			],
			[
				"samp",
				"samples"
			]
		]
	},
	"buffers":
	[
		{
			"file": "views/index.jade",
			"settings":
			{
				"buffer_size": 652,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var gulp = require('gulp'),\n    uglify = require('gulp-uglify'),\n    jade = require('gulp-jade');\n\nvar paths = {\n    scripts: [ 'src/*.coffee', 'public/js/vendor/*.js' ],\n    images: 'client/img/**/*'\n};\n\ngulp.task('scripts', function () {\n    gulp.src(paths.scripts)\n    .pipe(uglify())\n    .pipe(gulp.dest('build/js'));\n});\n\ngulp.task('views', function () {\n    gulp.src('./lib/*.jade')\n    .pipe(jade({ locals: {} }))\n    .pipe(gulp.dest('./public/'));\n});\n\ngulp.task('watch', function () {\n    gulp.watch(paths.scripts, [ 'scripts' ]);\n    gulp.watch(paths.images, [ 'images' ]);\n});\n\ngulp.task('default', [ 'scripts', 'images', 'watch' ]);",
			"file": "gulpfile.js",
			"file_size": 607,
			"file_write_time": 130359224400000000,
			"settings":
			{
				"buffer_size": 644,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 27.0,
		"selected_items":
		[
			[
				"hin",
				"JSHint: Set Linting Preferences"
			],
			[
				"hint",
				"JSHint: Set Linting Preferences"
			],
			[
				"lint",
				"SublimeLint: Report (Open Files)"
			],
			[
				"jsh",
				"JSHint: Set Linting Preferences"
			],
			[
				"jshi",
				"JSHint: Set Linting Preferences"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"sublimel",
				"SublimeLint: Show All Errors"
			],
			[
				"sublil",
				"SublimeLint: Show All Errors"
			],
			[
				"jsli",
				"JSHint: Set Plugin Options"
			],
			[
				"sublime l",
				"Preferences: SublimeLint Settings – Default"
			],
			[
				"jshin",
				"JSHint: Set Keyboard Shortcuts"
			],
			[
				"sublime",
				"Preferences: SublimeLint Settings – User"
			],
			[
				"j",
				"JSHint: Set Plugin Options"
			],
			[
				"jslin",
				"JSHint: Set Plugin Options"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ruler",
				"Ruler: Column 78"
			],
			[
				"100",
				"Ruler: Column 100"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"bl",
				"Git: Blame"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"prettys",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"prettyjs",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"pretty",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"shell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"instal ",
				"Package Control: Install Package"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/tanc/projects/draw/gulpfile.js",
		"/Users/tanc/projects/draw/package.json",
		"/Users/tanc/projects/draw/gulpfile.coffee",
		"/Users/tanc/projects/draw/src/app.coffee",
		"/Users/tanc/projects/web-pong/src/generators/javascript/pong.js",
		"/Users/tanc/projects/web-pong/package.json",
		"/Users/tanc/projects/web-pong/src/language.js",
		"/Users/tanc/projects/web-pong/styles/views/start-screen.scss",
		"/Users/tanc/Desktop/test.coffee",
		"/Users/tanc/projects/web-pong/soy/template.soy",
		"/Users/tanc/projects/web-pong/src/launchPong.js",
		"/Users/tanc/projects/web-pong/src/blocks.js",
		"/Users/tanc/projects/web-pong/src/code.js",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/AUTHORS",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/closure/goog/messaging/testdata/portchannel_wrong_origin_inner.html",
		"/Users/tanc/projects/web-pong/styles/ui/overlay.scss",
		"/Users/tanc/projects/web-pong/styles/core/layout.scss",
		"/Users/tanc/projects/web-pong/templates/index.hbs",
		"/Users/tanc/projects/web-pong/server/index.js",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/closure/goog/demos/index_nav.html",
		"/Users/tanc/projects/web-pong/static/fonts/bariol_light-webfont.svg",
		"/Users/tanc/projects/web-pong/build.js",
		"/Users/tanc/projects/web-pong/styles/ui/icons.scss",
		"/Users/tanc/projects/web-pong/styles/vendor/blockly.scss",
		"/Users/tanc/projects/web-pong/styles/ui/buttons.scss",
		"/Users/tanc/projects/web-pong/styles/views/blocks-menu.scss",
		"/Users/tanc/projects/web-pong/src/sharing.js",
		"/Users/tanc/projects/web-pong/lib/blockly/i18n/status.py",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/closure/bin/build/source_test.py",
		"/Users/tanc/projects/web-pong/server.py",
		"/Users/tanc/projects/web-pong/styles/mixins/utils.scss",
		"/Users/tanc/projects/web-pong/styles/mixins/css3.scss",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/closure/goog/math/matrix.js",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/closure/goog/i18n/mime.js",
		"/Users/tanc/projects/web-pong/Makefile",
		"/Users/tanc/projects/web-pong/local-config.js",
		"/Users/tanc/projects/web-pong/styles/main.scss",
		"/Users/tanc/projects/web-pong/lib/closure-library-read-only/closure/goog/datasource/datamanager.js",
		"/Users/tanc/projects/web-pong/styles/views/code-dialog.scss",
		"/Users/tanc/projects/web-pong/public/js/launchPong.js",
		"/Users/tanc/projects/web-pong/public/js/generators/javascript/pong.js",
		"/Users/tanc/projects/web-pong/public/js/pong/examples/player-vs-bot.html",
		"/Users/tanc/projects/web-pong/public/js/pong/src/Player.js",
		"/Users/tanc/projects/web-pong/.gitmodules",
		"/Users/tanc/projects/web-pong/README.md",
		"/Users/tanc/.ssh/config",
		"/Users/tanc/Downloads/credentials.csv",
		"/Users/tanc/Desktop/Tanc.terminal",
		"/Users/tanc/Desktop/4bit-d9e6f2-on-300b19.itermcolors",
		"/Users/tanc/Desktop/kanux-colorscheme.xml",
		"/Users/tanc/projects/web-pong/build/Pong.js",
		"/Users/tanc/projects/pong/public/js/pong/src/Player.js",
		"/Users/tanc/projects/pong/public/css/style.css",
		"/Users/tanc/projects/pong/public/js/pong/src/Ball.js",
		"/Users/tanc/projects/pong/public/js/pong/examples/custom-colors.html",
		"/Users/tanc/projects/pong/public/js/code.js",
		"/Users/tanc/projects/pong/public/js/generators/javascript/pong.js",
		"/Users/tanc/projects/pong/public/js/pong/build/Pong.js",
		"/Users/tanc/projects/pong/.gitmodules",
		"/Users/tanc/projects/pong/public/js/language.js",
		"/Users/tanc/projects/pong/lib/blockly/en_compressed.js",
		"/Users/tanc/projects/pong/src/blockly/en_compressed.js",
		"/Users/tanc/projects/pong/lib/blockly/pong.js",
		"/Users/tanc/projects/pong/src/pong/index.html",
		"/Users/tanc/projects/pong/src/build.py",
		"/Users/tanc/projects/pong/lib/blockly/generators/javascript.js",
		"/Users/tanc/projects/pong/src/blockly/core/language.js",
		"/Users/tanc/projects/pong/lib/blockly/core/language.js",
		"/Users/tanc/projects/pong/public/js/generators/javascript.js",
		"/Users/tanc/projects/pong/public/index.html",
		"/Users/tanc/projects/pong/public/js/build/templates.js",
		"/Users/tanc/projects/pong/src/pong/generated/en.js",
		"/Users/tanc/projects/pong/server.py",
		"/Users/tanc/projects/pong/public/css/blockly-core.css",
		"/Users/tanc/projects/pong/lib/blockly/core/trashcan.js",
		"/Users/tanc/projects/pong/templates/template.soy",
		"/Users/tanc/projects/pong/public/css/blockly.css",
		"/Users/tanc/projects/pong/package.json",
		"/Users/tanc/projects/pong/Gruntfile.js",
		"/Users/tanc/projects/pong/.gitignore",
		"/Users/tanc/projects/pong/src/config.py",
		"/Users/tanc/projects/pong/src/utils.py",
		"/Users/tanc/projects/pong/src/pong/code.js",
		"/Users/tanc/projects/pong/src/pong/launchPong.js",
		"/Users/tanc/projects/pong/src/blockly/generators/javascript/pong.js",
		"/Users/tanc/projects/pong/src/blockly/generators/javascript/math.js",
		"/Users/tanc/projects/pong/www/blockly/generators/javascript/pong.js",
		"/Users/tanc/projects/pong/src/blockly/core/generator.js",
		"/Users/tanc/projects/pong/src/pong/common.js",
		"/Users/tanc/projects/blocks/src/utils/dom.js",
		"/Users/tanc/projects/blocks/src/core/workspace.js",
		"/Users/tanc/projects/blocks/stylus/ui/block-modules.styl",
		"/Users/tanc/projects/blocks/data/blocks/logic/if/spec.block",
		"/Users/tanc/projects/blocks/data/blocks/actions/foo/spec.block",
		"/Users/tanc/projects/blocks/src/block/modules/Module.js",
		"/Users/tanc/projects/blocks/src/components/ExpoBlock.js",
		"/Users/tanc/projects/blocks/src/core/blockhover.js",
		"/Users/tanc/projects/blocks/src/block/rows/ContainerRow.js",
		"/Users/tanc/projects/blocks/src/block/rows/Row.js",
		"/Users/tanc/projects/blocks/src/core/dragdrop.js",
		"/Users/tanc/projects/blocks/stylus/ui/blocks.styl",
		"/Users/tanc/projects/blocks/src/components/CodeBlock.js",
		"/Users/tanc/projects/blocks/src/block/draw/row-container.js",
		"/Users/tanc/projects/blocks/stylus/layout/workspace.styl",
		"/Users/tanc/projects/blocks/src/block/draw/row-default.js",
		"/Users/tanc/projects/blocks/src/block/RowRenderer.js",
		"/Users/tanc/projects/blocks/src/block/modules/ParamModule.js",
		"/Users/tanc/projects/blocks/src/block/draw/Path.js",
		"/Users/tanc/projects/blocks/src/utils/geometry.js",
		"/Users/tanc/Library/Application Support/Sublime Text 3/Packages/User/JavaScript.sublime-settings",
		"/Users/tanc/projects/blocks/src/core/blocks.js",
		"/Users/tanc/projects/blocks/src/block/draw/tools.js",
		"/Users/tanc/projects/blocks/src/block/modules/LabelModule.js",
		"/Users/tanc/projects/blocks/src/block/parseSpec.js",
		"/Users/tanc/projects/blocks/src/components/Block.js",
		"/Users/tanc/projects/blocks/src/components/BlockSelection.js",
		"/Users/tanc/projects/blocks/src/components/BlocksMenu.js",
		"/Users/tanc/projects/blocks/src/components/Component.js",
		"/Users/tanc/projects/blocks/src/core/types.js",
		"/Users/tanc/projects/blocks/src/core/templates.js",
		"/Users/tanc/projects/blocks/src/core/endpoints.js",
		"/Users/tanc/projects/blocks/src/index.js",
		"/Users/tanc/projects/handlebars-inheritance/lib/helpers.js",
		"/Users/tanc/projects/handlebars-inheritance/tests/helper.js",
		"/Users/tanc/projects/handlebars-inheritance/node_modules/handlebars/test.js",
		"/Users/tanc/projects/handlebars-inheritance/package.json",
		"/Users/tanc/Library/Application Support/Sublime Text 3/Packages/JSHint Gutter/.jshintrc",
		"/Users/tanc/projects/snake/snake/themes.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"*",
			"www/game-data",
			"959",
			"*",
			"./*",
			"*",
			"*.less",
			"",
			"*coffee",
			"*",
			"*.mustache",
			"*",
			"mem-garden",
			"*",
			"",
			"/Users/tancreditrugenberger/projects/memrise/memrise/",
			"/Users/tancreditrugenberger/projects/memrise/memrise/*",
			"*",
			"/Users/tancreditrugenberger/projects/memrise/memrise",
			"*/Users/tancreditrugenberger/projects/memrise/memrise",
			"*,/Users/tancreditrugenberger/projects/memrise/memrise",
			"*",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"gameLoop",
			"run",
			"introLoop",
			".start",
			"'start",
			"loop",
			"'start",
			"startsc",
			"game.emit",
			"play",
			"winSounds",
			"win",
			"hit_",
			"win_",
			"catPongSetters",
			"<block type=\"pong_speedSetter\"></block>\n      <block type=\"pong_paddleSizeSetter\"></block>\n      <block type=\"pong_ballSizeSetter\"></block>",
			"<block type=\"pong_moshi_monster_random\"></block>\n      <block type=\"pong_moshi_monster_01\"></block>",
			"<block type=\"pong_moshi_monster_01\"></block>\n      <block type=\"pong_moshi_monster_02\"></block>\n      <block type=\"pong_moshi_monster_03\"></block>\n      <block type=\"pong_moshi_monster_04\"></block>\n      <block type=\"pong_moshi_monster_05\"></block>\n      <block type=\"pong_moshi_monster_06\"></block>\n      <block type=\"pong_moshi_monster_07\"></block>\n      <block type=\"pong_moshi_monster_08\"></block>\n      <block type=\"pong_moshi_monster_09\"></block>\n      <block type=\"pong_moshi_monster_10\"></block>",
			"monster",
			"omnsterse",
			"setter",
			"random",
			"update",
			"setter",
			"playgr",
			"set",
			"border",
			"blocklyTreeLabel",
			"verticalLineMakeButton",
			"bg-image",
			"@include bg-image",
			"bg-image",
			"assets",
			"color",
			"'window.",
			"'window",
			"'WINDOW",
			"'window",
			"window.",
			"getke",
			"hits",
			"color",
			"down",
			"key",
			"abs",
			"gameEvents",
			"event",
			" \n",
			"goal",
			"abs(",
			"players",
			"abs",
			"replace",
			"stop",
			".stop",
			"pong",
			"sets",
			"git://github.com/KanoComputing/pong",
			"git://github.com/KanoComputing/pong.git",
			"https://github.com/KanoComputing/pong/issues",
			"emit",
			"update",
			".y",
			"getter",
			"middle",
			"center",
			"middle",
			"speed",
			"ball_si",
			"window.pongSettin",
			"window.",
			"title",
			"'Bariol",
			"p_index",
			"[i]",
			"speed",
			"pong_paddleSizeSetter",
			"player",
			"pong_ballSizeSetter",
			"ball",
			"settings.",
			"ball",
			"color",
			"pongSettings",
			"width",
			"window.",
			"make",
			";",
			"Blockly.Pong",
			"shu",
			"python\"",
			"\"JavaScript\"",
			"'JavaScript'",
			"javascript",
			"language",
			"media",
			"trashli",
			"header_pong.png",
			"png",
			"media",
			"<<<PATH>>>/media",
			"media",
			"../blockly/media",
			"\"/css",
			"/css",
			" src=\"/",
			"www",
			"compuler",
			"soy",
			"build",
			"blockl",
			"savePythonScript",
			"workspace",
			"make",
			"ORDER_UNARY_SIGN",
			"pong_ballSizeGetter",
			"loadBlocks",
			"restoreblocks",
			"BlocklyStorage",
			"storage",
			"load",
			"stora",
			"dragged",
			"block",
			"current",
			"sheet",
			"blocko",
			"emi"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"920",
			"(require '../helpers/dom').getByRole",
			"color-primary",
			"Schema",
			"schema"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"folder_exclude_patterns":
			[
				"node_modules"
			],
			"follow_symlinks": true,
			"path": "/Users/tanc/projects/draw"
		}
	],
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "views/index.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 652,
						"regions":
						{
						},
						"selection":
						[
							[
								595,
								595
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gulpfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 644,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								50
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"packa",
				"package.json"
			],
			[
				"pong.js",
				"static/js/vendor/Pong.js"
			],
			[
				"code",
				"src/code.js"
			],
			[
				"laun",
				"src/launchPong.js"
			],
			[
				"inde",
				"templates/index.hbs"
			],
			[
				"scri",
				"scripts.json"
			],
			[
				"temp",
				"soy/template.soy"
			],
			[
				"pong",
				"src/generators/javascript/pong.js"
			],
			[
				"lang",
				"src/language.js"
			],
			[
				"templ",
				"soy/template.soy"
			],
			[
				"launch",
				"src/launchPong.js"
			],
			[
				"block",
				"src/blocks.js"
			],
			[
				"start",
				"styles/views/start-screen.scss"
			],
			[
				"mixi",
				"styles/mixins/utils.scss"
			],
			[
				"layo",
				"styles/core/layout.scss"
			],
			[
				"sharin",
				"src/sharing.js"
			],
			[
				"exampleplayer",
				"public/js/pong/examples/player-vs-bot.html"
			],
			[
				"pla",
				"public/js/pong/src/Player.js"
			],
			[
				"javas",
				"public/js/generators/javascript/pong.js"
			],
			[
				"gitmo",
				".gitmodules"
			],
			[
				"pack",
				"package.json"
			],
			[
				"re",
				"README.md"
			],
			[
				"play",
				"public/js/pong/src/Player.js"
			],
			[
				"s",
				"public/css/style.css"
			],
			[
				"ball",
				"public/js/pong/src/Ball.js"
			],
			[
				"pongjs",
				"public/js/generators/javascript/pong.js"
			],
			[
				"style",
				"public/css/style.css"
			],
			[
				"langu",
				"public/js/language.js"
			],
			[
				"bui",
				"src/build.py"
			],
			[
				"java",
				"lib/blockly/generators/javascript.js"
			],
			[
				"corelang",
				"src/blockly/core/language.js"
			],
			[
				"en",
				"src/pong/generated/en.js"
			],
			[
				"styl",
				"public/css/style.css"
			],
			[
				"soy",
				"templates/template.soy"
			],
			[
				"blockl",
				"public/css/blockly.css"
			],
			[
				"index",
				"public/index.html"
			],
			[
				"serve",
				"server.py"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"conf",
				"src/config.py"
			],
			[
				"util",
				"src/utils.py"
			],
			[
				"buil",
				"src/build.py"
			],
			[
				"uti",
				"src/utils.py"
			],
			[
				"paca",
				"package.json"
			],
			[
				"gene",
				"src/blockly/core/generator.js"
			],
			[
				"work",
				"stylus/layout/workspace.styl"
			],
			[
				"blocksty",
				"stylus/ui/blocks.styl"
			],
			[
				"dom",
				"src/utils/dom.js"
			],
			[
				"dragd",
				"src/core/dragdrop.js"
			],
			[
				"specblock",
				"data/blocks/logic/if/spec.block"
			],
			[
				"spec",
				"data/blocks/actions/foo/spec.block"
			],
			[
				"module",
				"stylus/ui/block-modules.styl"
			],
			[
				"mod",
				"src/block/modules/Module.js"
			],
			[
				"modu",
				"src/block/modules/Module.js"
			],
			[
				"codebl",
				"src/components/CodeBlock.js"
			],
			[
				"blockho",
				"src/core/blockhover.js"
			],
			[
				"param",
				"src/block/modules/ParamModule.js"
			],
			[
				"contain",
				"src/block/rows/ContainerRow.js"
			],
			[
				"drag",
				"src/core/dragdrop.js"
			],
			[
				"con",
				"src/block/draw/row-container.js"
			],
			[
				"modulesty",
				"stylus/ui/block-modules.styl"
			],
			[
				"row",
				"src/block/rows/Row.js"
			],
			[
				"path",
				"src/block/draw/Path.js"
			],
			[
				"rowre",
				"src/block/RowRenderer.js"
			],
			[
				"modue",
				"src/block/modules/Module.js"
			],
			[
				"ro",
				"src/block/rows/Row.js"
			],
			[
				"blockrow",
				"src/block/rows/Row.js"
			],
			[
				"codeb",
				"src/components/CodeBlock.js"
			],
			[
				"codebloc",
				"src/components/CodeBlock.js"
			],
			[
				"epxo",
				"src/components/ExpoBlock.js"
			],
			[
				"e",
				"src/components/ExpoBlock.js"
			],
			[
				"domjs",
				"src/utils/dom.js"
			],
			[
				"dragdop",
				"src/core/dragdrop.js"
			],
			[
				"sty",
				"stylus/layout/workspace.styl"
			],
			[
				"test",
				"node_modules/handlebars/test.js"
			],
			[
				"pac",
				"package.json"
			],
			[
				"help",
				"tests/helper.js"
			],
			[
				"redm",
				"README.md"
			],
			[
				"cake",
				"Cakefile"
			],
			[
				"them",
				"snake/themes.py"
			],
			[
				"expo",
				"src/components/ExpoBlock.js"
			],
			[
				"var",
				"stylus/core/variables.styl"
			],
			[
				"head",
				"stylus/layout/header.styl"
			],
			[
				"mix",
				"stylus/mixins/base.styl"
			],
			[
				"mainsty",
				"stylus/main.styl"
			],
			[
				"bgim",
				"stylus/mixins/bg-image.styl"
			],
			[
				"mixin",
				"stylus/mixins/base.styl"
			],
			[
				"box",
				"stylus/ui/boxes.styl"
			],
			[
				"bu",
				"stylus/ui/buttons.styl"
			],
			[
				"typo",
				"stylus/core/typography.styl"
			],
			[
				"pale",
				"stylus/core/palette.styl"
			],
			[
				"form",
				"stylus/ui/forms.styl"
			],
			[
				"button",
				"stylus/ui/buttons.styl"
			],
			[
				"vari",
				"stylus/core/variables.styl"
			],
			[
				"fonts",
				"stylus/core/fonts.styl"
			],
			[
				"mains",
				"stylus/main.styl"
			],
			[
				"page",
				"stylus/layout/page.styl"
			],
			[
				"typogr",
				"stylus/core/typography.styl"
			],
			[
				"ser",
				"server/index.js"
			],
			[
				"pacak",
				"node_modules/async/package.json"
			],
			[
				"app",
				"public/js/app.js"
			],
			[
				"jakef",
				"Jakefile.js"
			],
			[
				"the",
				"theme.py"
			],
			[
				"grap",
				"graphics.py"
			],
			[
				"game",
				"game.py"
			],
			[
				"sta",
				"stage.py"
			],
			[
				"confi",
				"config.py"
			],
			[
				"control",
				"controls.py"
			],
			[
				"gamel",
				"gameloop.py"
			],
			[
				"stage",
				"stage.py"
			],
			[
				"tage",
				"stage.py"
			],
			[
				"gr",
				"graphics.py"
			],
			[
				"gamelo",
				"gamelogic.py"
			],
			[
				"graph",
				"graphics.py"
			],
			[
				"r",
				"run.py"
			],
			[
				"galo",
				"gamelogic.py"
			],
			[
				"than",
				"markdown/thanks.md"
			],
			[
				"concl",
				"markdown/conclusion.md"
			],
			[
				"recrui",
				"markdown/recruitment.md"
			],
			[
				"archi",
				"markdown/architecture.md"
			],
			[
				"focu",
				"markdown/focus.md"
			],
			[
				"exper",
				"markdown/experience.md"
			],
			[
				"intru",
				"markdown/introduction.md"
			],
			[
				"intro",
				"markdown/intro.md"
			],
			[
				"skyscs",
				"css/theme/source/sky.scss"
			],
			[
				"grunt",
				"Gruntfile.js"
			],
			[
				"sky",
				"css/theme/sky.css"
			],
			[
				"nighcs",
				"css/theme/night-custom.css"
			],
			[
				"nightcs",
				"css/theme/source/night-custom.scss"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 229.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
